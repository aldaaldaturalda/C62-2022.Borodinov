/*
Машина имеет двигатель, бензобак (реализуйте класс для каждой сущности).
Чтобы поехать, машину необходимо завести, т.е. включить двигатель.
         -// Реализуйте методы включения машины, который в свою очередь включает её двигатель.
         -// Реализуйте метод езды на машине (например просто печатаем на консоль, что машина поехала)
         - //Если машина не заведена, ехать она не может.
         - //Машину можно заглушить.
         - После каждой поездки считаем, что машина прошла фиксированное расстояние.
         - Реализовать возможность посмотреть, какое расстояние машина прошла за все время.
         -// Чтобы создать машину, обязательно нужно иметь двигатель и бензобак.
         - Марка машины, год выпуска, пройденное расстояние - не обязательны при создании машины и могут быть выставлены потом.
         (необязательно задавать в конструкторе)
         - После создания поменять двигатель машине нельзя.
         - Чтобы машина завелась, у неё должно быть топливо в бензобаке, если топлива нет, машина не может завестись.
         - Машину можно дозаправить, можно проверить сколько топлива осталось.
         - Реализуйте пару полей для двигателя и бензобака, например: тип двигателя, общий объем бензобака,
         сколько бензина сейчас и т.д.
 */
package car;

import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Car[] car = {
                new Car(new FuelTank(100), new Engine(true, 100,
                        "Benzin"), new Mileage(100), "MERCEDES", 2021, 10),
                new Car()
        };
        System.out.println(Arrays.toString(car));
//        car = new Car(new Engine(true, 100, "Diesel"), new FuelTank(30), "BMW", 2020);
//        car.setMileage(new Mileage(10));
//        car.setMileage(new Mileage(car.getCheckMileage()));
//        car.setFuelTank(new FuelTank(100));
//        car.getFuelTank().checkFuel(10);
//        car.getEngine().setResourceOfEngine(10);
//        System.out.println(car.getEngine().getResourceOfEngine());
//        System.out.println(car);
    }
}
